/* Info point configuration file */
{

    /*
      By default the server does not run as a daemon. Use 'yes' if you need it.
      Note that the server will write a pid file in /var/run/info_point_server.pid when daemonized.
    */
    "demonize": "no",

    /*
      When running daemonized, the server writes a pid file in /var/run/info_point_server.pid by
      default. You can specify a custom pid file location here.
    */
    "pidfile": "/var/run/info_point_server.pid",

    /*
      Accept connections on the specified port, default is 9090.
      If port 0 is specified the server will not listen on a TCP socket.
    */
    "port": 9090,
    /*
      If you want you can bind a single interface, if the bind option is not
      specified all the interfaces will listen for incoming connections.
    */
    "bind": "localhost",
    /* Close the connection after a client is idle for N seconds (0 to disable) */
    "timeout": 0,
    /*
      Set server verbosity. Available options:
      + debug (a lot of information, useful for development/testing)
      + verbose (many rarely useful info, but not a mess like the debug level)
      + notice (moderately verbose, what you want in production probably)
      + warning (only very important / critical messages are logged)
    */
    "loglevel": "debug",
    /*
      Specify the log file name.
      Also 'stdout' can be used to force the server to log on the standard output.
      Note that if you use standard output for logging but daemonize,
      logs will be sent to /dev/null
    */
    "logfile": "stdout",

    /*
      Set the max number of connected clients at the same time. By default
      this limit is set to 10000 clients.
      
      Once the limit is reached the server will close all the new connections.
    */
    "max_clients": 100,

    /* Set the max number of worker threads. */
    "max_threads": 10
}
