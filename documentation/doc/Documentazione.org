#+begin_export latex
\thispagestyle{empty}
\newgeometry{margin=0pt}
\begin{tikzpicture}[remember picture, overlay]
  \begin{scope}

    % STRUTTURA ESTERNA (ANGOLI E COLORAZIONE)
    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=darkblue,
      minimum size =55cm] (triangoloPrimoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};

    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=footerColorSurrounding,
      minimum size =50cm] (triangoloSecondoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};

    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=darkdark,
      minimum size =35cm] (triangoloTerzoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};

    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=white,
      minimum size =32cm] (triangoloQuartoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};


    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=135,
      fill=white,
      minimum size =31cm] (triangoloSuperiore)
    at ($(current page.north west)$)
    {};


    % STRUTTURA DEL CERCHIO E IL SUO CONTENUTO
    \node [circle, minimum size=15cm, fill=white, draw=darkblue, line width = 7pt, xshift=11cm, yshift=1cm](centro)
    at ($(current page.west)$)
    {\includegraphics[scale=.3]{./Start-Page/logo.png}};

    %\node[rectangle,
    %  draw,
    %  minimum width=4cm,
    %  minimum height=2mm,
    %  xshift= 6.42cm,
    %  yshift= -11cm,
    %  minimum height=2mm,
    %  fill = darkblue] (r) at (0,0) {};
 
    %\node[scale=1.5] at (11,-13){\itshape{\LARGE{Università degli studi di Napoli}}};
    %\node[scale=1.5] at (11,-15){\itshape{\LARGE{Federico II}}};


   %% STRUTTURA ANGOLO SINISTRO (angolo north-west)
   \node[scale=3] at (1,-1){\includegraphics[height=10pt,width=10pt]{./Start-Page/calendar.png}};
   \node[scale=2] at (6,-1){\itshape{\LARGE{A.A. 2022-2023}}};

   %% ID GRUPPO
   \node[scale=3] at (1,-4){\includegraphics[height=10pt,width=10pt]{./Start-Page/group-id.png}};
   \node[scale=1.4] at (4.3, -4.1){ID Gruppo: LSO\_2122\_23};

    
   %% STRUTTURA ANGOLO DESTRO (angolo south-east)
   \begin{scope}[node distance=15mm and 1mm]
     %% Valentino Bocchetti
     \node [scale=3,] (StudentA) at (14, -22) {\includegraphics[height=10pt,width=10pt]{./Start-Page/graduated.png}};
        \node[scale=1.2, right=of StudentA] (StudentAInfo) {\textbf{Valentino Bocchetti - N86003405}};

     %% Dario Morace
     \node [scale=3, below= of StudentA.west,anchor=west] (StudentB) {\includegraphics[height=10pt,width=10pt]{./Start-Page/graduated.png}};
        \node[scale=1.2, right=of StudentB] (StudentBInfo) {\textbf{Dario Morace - }};

     %% Lucia Brando
     \node [scale=3, below= of StudentB.west,anchor=west] (StudentC) {\includegraphics[height=10pt,width=10pt]{./Start-Page/graduated_alt.png}};
        \node[scale=1.2, right=of StudentC] (StudentCInfo) {\textbf{Lucia Brando - }};
   \end{scope}

  \end{scope}

\end{tikzpicture}

\newpage
\restoregeometry
\renewcommand*\contentsname{\hfill Indice \hfill}
\tableofcontents
#+end_export
#+OPTIONS: date:nil title:nil toc:nil
#+STARTUP: overview
#+STARTUP: hideblocks
#+SETUPFILE: ~/config/emacs/setup-org-latex.setup
#+LATEX: \pagebreak
----------------------------------------------------------------
* Revisioni
:PROPERTIES:
:CUSTOM_ID: Revisioni
:END:
* Presentazione
:PROPERTIES:
:CUSTOM_ID: Presentazione
:END:
#+begin_export latex
\noindent\makebox[\textwidth]{\includegraphics[width=\paperwidth]{Start-Page/title.png}}
#+end_export

$InfoPoint^{\copyright}$ è un progetto che nasce per offrire un supporto ai visitatori del museo.

Questo progetto si concretizza in 2 componenti ben definite:
+ Un backend scritto in ~C~ per la gestione dei dati, hostato \autocite{HOSTING} su una macchina virtuale offerta da Azure \autocite{VirtualMachines};
+ Una applicazione ~Android~, scritta in ~Java~ che fa da client;
* Guida al Server
:PROPERTIES:
:CUSTOM_ID: Guida al Server
:END:
** Funzionalità
:PROPERTIES:
:CUSTOM_ID: Guida al Server - Funzionalità
:END:

Il Sistema, deve offrire, una serie di funzionalità:
+ Possibilità di connessione concorrente;
+ Possibilità di potersi registrare alla piattaforma \autocite{RefRegistrazione};
+ Possibilità di usufruire dei contenuti in base alla tipologia di utente, in modo da permette un focus diverso in base alle sue caratteristiche \autocite{RefUtenti};
** Scelte implementative
:PROPERTIES:
:CUSTOM_ID: Guida al Server - Scelte implementative
:END:

Seguendo il concetto del /DIVIDE ET IMPERA/ \autocite{DIVIDE_ET_IMPERA} si è scelto di spezzare le varie funzionalità che vengono messe a disposizione per rendere il codice facilmente manutenibile ed evitare lo stato di codice monolitico \autocite{MONOLITICO}.
** Tecnologie e strumenti utilizzati
:PROPERTIES:
:CUSTOM_ID: Guida al Server - 
:END:

Per una migliore gestione del Sistema, si è fatto uso di una serie di strumenti.

Durante lo sviluppo si è fatto uso dell'utility ~cmake~ \autocite{CMAKE} , tool modulare che permette la generazione di un ~Makefile~ \autocite{MAKEFILE} .

Per la fase di deploy invece si è fatto uso di ~docker~, tool che permette l'esecuzione di programmi in maniera containerizzata.

Come sperato, la combinazione di questi tool ha permesso un passaggio immediato da una situazione di esecuzione locale (di debug) ad una 

Come sperato, avendo adottato entrambe le strategie non si sono riscontrati problemi durante il passaggio da un ambiente locale (di testing) a uno decentralizzato (in produzione).
** Memorizzazione dei dati
:PROPERTIES:
:CUSTOM_ID: Guida al Server - Memorizzazione dei dati
:END:

Per essere sempre in linea con le nuove tendenze e tecnologie si è scelto di abbandonare il classico approccio basato su un collegamento ad una base di dati relazionale, preferendo un approccio di tipo *NOSQL* \autocite{RefNoSQL} , che offre una maggiore elasticità e scalabilità nel tempo.
* Guida al Client
:PROPERTIES:
:CUSTOM_ID: Guida al Client
:END:
** Primo avvio
:PROPERTIES:
:CUSTOM_ID: Guida al Client - Primo avvio
:END:
** Post registrazione
:PROPERTIES:
:CUSTOM_ID: Guida al Client - Post registrazione
:END:
** Memorizzazione delle informazioni
:PROPERTIES:
:CUSTOM_ID: Guida al Client - Memorizzazione delle informazioni
:END:
** Modelli di Dominio
:PROPERTIES:
:CUSTOM_ID: Guida al Client - Modelli di Dominio
:END:
#+begin_center
*Class Diagram*
#+end_center

#+begin_center
*Sequence Diagram*
#+end_center
* Protocollo applicativo
:PROPERTIES:
:CUSTOM_ID: Protocollo applicativo
:END:
Come già indicato in precedenza abbiamo preferito il protocollo ~TCP~ rispetto al protocollo ~UDP~, per la presenza di un controllo della congestione e affidabilità in termini di =invio/ricezione= di dati \autocite{UDP}.

Lo sviluppo dell'applicativo è stato inizialmente verticalizzato sulla creazione dello scheletro del Server, per avere un primo approccio nudo e crudo allo scambio di messaggi via ~socket~.

Per avere un programma robusto e manutenibile si è fatto largo uso delle ~good pratices~ che questo tipo di comunicazione richiede. In particolare:
+ La connessione viene aperta solo nel momento in cui devono essere =inviati/ricevuti= dati (Si evita in questo modo di tenere aperte connessioni in momenti in cui queste non vengono sfruttate);
+ Si effettuano controlli di raggiungibilità del server lato client \autocite{RAGGIUNGIBILE};
+ Vengono controllati i dati =inviati/ricevuti= sempre prima di compiere operazioni che possano minare il corretto funzionamento di ~Server~ e ~Client~ \autocite{CONTROLLO};
+ Vengono effettuati controlli e gestione degli stati di tutte le operazioni lato ~Server.~
* Dettagli implementativi
:PROPERTIES:
:CUSTOM_ID: Dettagli implementativi
:END:
** Server
:PROPERTIES:
:CUSTOM_ID: Dettagli implementativi - Server
:END:
** Client
:PROPERTIES:
:CUSTOM_ID: Dettagli implementativi - Client
:END:
* Codice sorgente sviluppato
:PROPERTIES:
:CUSTOM_ID: Codice sorgente sviluppato
:END:
Il codice sorgente prodotto durante lo sviluppo di $InfoPoint^{\copyright}$ è disponibile sulla piattaforma /GitHub/, che ne ha permesso anche il versionamento.

Di seguito riportiamo un link per il [[https://github.com/luftmensch-luftmensch/InfoPoint/][download]] \autocite{informazioniRepository}
* Ringraziamenti
:PROPERTIES:
:CUSTOM_ID: Ringraziamenti
:END:

Ringraziamo la professoressa [[mailto:alessandra.rossi@unina.it][Alessandra Rossi]] per lo splendido corso, che ci ha permesso di conoscere nuove interessanti tecnologie e del supporto offertoci durante e dopo le lezioni.
